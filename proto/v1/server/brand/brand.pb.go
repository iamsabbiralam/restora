// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/v1/server/brand/brand.proto

package brand

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_Unknown  Status = 0
	Status_Active   Status = 1
	Status_Inactive Status = 2
)

var Status_name = map[int32]string{
	0: "Unknown",
	1: "Active",
	2: "Inactive",
}

var Status_value = map[string]int32{
	"Unknown":  0,
	"Active":   1,
	"Inactive": 2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c56364b3e48638d2, []int{0}
}

type SortBy int32

const (
	SortBy_DESC SortBy = 0
	SortBy_ASC  SortBy = 1
)

var SortBy_name = map[int32]string{
	0: "DESC",
	1: "ASC",
}

var SortBy_value = map[string]int32{
	"DESC": 0,
	"ASC":  1,
}

func (x SortBy) String() string {
	return proto.EnumName(SortBy_name, int32(x))
}

func (SortBy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c56364b3e48638d2, []int{1}
}

type Brand struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Status               Status               `protobuf:"varint,3,opt,name=Status,proto3,enum=brand.Status" json:"Status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	CreatedBy            string               `protobuf:"bytes,5,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,7,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	DeletedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
	DeletedBy            string               `protobuf:"bytes,9,opt,name=DeletedBy,proto3" json:"DeletedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Brand) Reset()         { *m = Brand{} }
func (m *Brand) String() string { return proto.CompactTextString(m) }
func (*Brand) ProtoMessage()    {}
func (*Brand) Descriptor() ([]byte, []int) {
	return fileDescriptor_c56364b3e48638d2, []int{0}
}

func (m *Brand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Brand.Unmarshal(m, b)
}
func (m *Brand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Brand.Marshal(b, m, deterministic)
}
func (m *Brand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Brand.Merge(m, src)
}
func (m *Brand) XXX_Size() int {
	return xxx_messageInfo_Brand.Size(m)
}
func (m *Brand) XXX_DiscardUnknown() {
	xxx_messageInfo_Brand.DiscardUnknown(m)
}

var xxx_messageInfo_Brand proto.InternalMessageInfo

func (m *Brand) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Brand) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Brand) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *Brand) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Brand) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *Brand) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Brand) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

func (m *Brand) GetDeletedAt() *timestamp.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

func (m *Brand) GetDeletedBy() string {
	if m != nil {
		return m.DeletedBy
	}
	return ""
}

type CreateBrandRequest struct {
	Name                 string               `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Status               Status               `protobuf:"varint,2,opt,name=Status,proto3,enum=brand.Status" json:"Status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	CreatedBy            string               `protobuf:"bytes,4,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,6,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateBrandRequest) Reset()         { *m = CreateBrandRequest{} }
func (m *CreateBrandRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBrandRequest) ProtoMessage()    {}
func (*CreateBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c56364b3e48638d2, []int{1}
}

func (m *CreateBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBrandRequest.Unmarshal(m, b)
}
func (m *CreateBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBrandRequest.Marshal(b, m, deterministic)
}
func (m *CreateBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBrandRequest.Merge(m, src)
}
func (m *CreateBrandRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBrandRequest.Size(m)
}
func (m *CreateBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBrandRequest proto.InternalMessageInfo

func (m *CreateBrandRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateBrandRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *CreateBrandRequest) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *CreateBrandRequest) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *CreateBrandRequest) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *CreateBrandRequest) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

type CreateBrandResponse struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBrandResponse) Reset()         { *m = CreateBrandResponse{} }
func (m *CreateBrandResponse) String() string { return proto.CompactTextString(m) }
func (*CreateBrandResponse) ProtoMessage()    {}
func (*CreateBrandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c56364b3e48638d2, []int{2}
}

func (m *CreateBrandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBrandResponse.Unmarshal(m, b)
}
func (m *CreateBrandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBrandResponse.Marshal(b, m, deterministic)
}
func (m *CreateBrandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBrandResponse.Merge(m, src)
}
func (m *CreateBrandResponse) XXX_Size() int {
	return xxx_messageInfo_CreateBrandResponse.Size(m)
}
func (m *CreateBrandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBrandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBrandResponse proto.InternalMessageInfo

func (m *CreateBrandResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type GetBrandRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBrandRequest) Reset()         { *m = GetBrandRequest{} }
func (m *GetBrandRequest) String() string { return proto.CompactTextString(m) }
func (*GetBrandRequest) ProtoMessage()    {}
func (*GetBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c56364b3e48638d2, []int{3}
}

func (m *GetBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrandRequest.Unmarshal(m, b)
}
func (m *GetBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrandRequest.Marshal(b, m, deterministic)
}
func (m *GetBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrandRequest.Merge(m, src)
}
func (m *GetBrandRequest) XXX_Size() int {
	return xxx_messageInfo_GetBrandRequest.Size(m)
}
func (m *GetBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrandRequest proto.InternalMessageInfo

func (m *GetBrandRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type GetBrandResponse struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Status               Status               `protobuf:"varint,3,opt,name=Status,proto3,enum=brand.Status" json:"Status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	CreatedBy            string               `protobuf:"bytes,5,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,7,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetBrandResponse) Reset()         { *m = GetBrandResponse{} }
func (m *GetBrandResponse) String() string { return proto.CompactTextString(m) }
func (*GetBrandResponse) ProtoMessage()    {}
func (*GetBrandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c56364b3e48638d2, []int{4}
}

func (m *GetBrandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrandResponse.Unmarshal(m, b)
}
func (m *GetBrandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrandResponse.Marshal(b, m, deterministic)
}
func (m *GetBrandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrandResponse.Merge(m, src)
}
func (m *GetBrandResponse) XXX_Size() int {
	return xxx_messageInfo_GetBrandResponse.Size(m)
}
func (m *GetBrandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrandResponse proto.InternalMessageInfo

func (m *GetBrandResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *GetBrandResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetBrandResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *GetBrandResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetBrandResponse) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *GetBrandResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *GetBrandResponse) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

type UpdateBrandRequest struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Status               Status               `protobuf:"varint,3,opt,name=Status,proto3,enum=brand.Status" json:"Status,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,5,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateBrandRequest) Reset()         { *m = UpdateBrandRequest{} }
func (m *UpdateBrandRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBrandRequest) ProtoMessage()    {}
func (*UpdateBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c56364b3e48638d2, []int{5}
}

func (m *UpdateBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBrandRequest.Unmarshal(m, b)
}
func (m *UpdateBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBrandRequest.Marshal(b, m, deterministic)
}
func (m *UpdateBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBrandRequest.Merge(m, src)
}
func (m *UpdateBrandRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBrandRequest.Size(m)
}
func (m *UpdateBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBrandRequest proto.InternalMessageInfo

func (m *UpdateBrandRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *UpdateBrandRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateBrandRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *UpdateBrandRequest) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *UpdateBrandRequest) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

type UpdateBrandResponse struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Status               Status               `protobuf:"varint,3,opt,name=Status,proto3,enum=brand.Status" json:"Status,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,5,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateBrandResponse) Reset()         { *m = UpdateBrandResponse{} }
func (m *UpdateBrandResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateBrandResponse) ProtoMessage()    {}
func (*UpdateBrandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c56364b3e48638d2, []int{6}
}

func (m *UpdateBrandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBrandResponse.Unmarshal(m, b)
}
func (m *UpdateBrandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBrandResponse.Marshal(b, m, deterministic)
}
func (m *UpdateBrandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBrandResponse.Merge(m, src)
}
func (m *UpdateBrandResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateBrandResponse.Size(m)
}
func (m *UpdateBrandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBrandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBrandResponse proto.InternalMessageInfo

func (m *UpdateBrandResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *UpdateBrandResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateBrandResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *UpdateBrandResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *UpdateBrandResponse) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

type ListBrandRequest struct {
	SortBy               SortBy   `protobuf:"varint,1,opt,name=SortBy,proto3,enum=brand.SortBy" json:"SortBy,omitempty"`
	SortByColumn         string   `protobuf:"bytes,2,opt,name=SortByColumn,proto3" json:"SortByColumn,omitempty"`
	Status               Status   `protobuf:"varint,3,opt,name=Status,proto3,enum=brand.Status" json:"Status,omitempty"`
	Limit                int32    `protobuf:"varint,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset               int32    `protobuf:"varint,5,opt,name=Offset,proto3" json:"Offset,omitempty"`
	SearchTerm           string   `protobuf:"bytes,6,opt,name=SearchTerm,proto3" json:"SearchTerm,omitempty"`
	StartDate            string   `protobuf:"bytes,7,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate              string   `protobuf:"bytes,8,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBrandRequest) Reset()         { *m = ListBrandRequest{} }
func (m *ListBrandRequest) String() string { return proto.CompactTextString(m) }
func (*ListBrandRequest) ProtoMessage()    {}
func (*ListBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c56364b3e48638d2, []int{7}
}

func (m *ListBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBrandRequest.Unmarshal(m, b)
}
func (m *ListBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBrandRequest.Marshal(b, m, deterministic)
}
func (m *ListBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBrandRequest.Merge(m, src)
}
func (m *ListBrandRequest) XXX_Size() int {
	return xxx_messageInfo_ListBrandRequest.Size(m)
}
func (m *ListBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBrandRequest proto.InternalMessageInfo

func (m *ListBrandRequest) GetSortBy() SortBy {
	if m != nil {
		return m.SortBy
	}
	return SortBy_DESC
}

func (m *ListBrandRequest) GetSortByColumn() string {
	if m != nil {
		return m.SortByColumn
	}
	return ""
}

func (m *ListBrandRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *ListBrandRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListBrandRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListBrandRequest) GetSearchTerm() string {
	if m != nil {
		return m.SearchTerm
	}
	return ""
}

func (m *ListBrandRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *ListBrandRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

type ListBrandResponse struct {
	Categories           []*Brand `protobuf:"bytes,1,rep,name=Categories,proto3" json:"Categories,omitempty"`
	Total                int32    `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBrandResponse) Reset()         { *m = ListBrandResponse{} }
func (m *ListBrandResponse) String() string { return proto.CompactTextString(m) }
func (*ListBrandResponse) ProtoMessage()    {}
func (*ListBrandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c56364b3e48638d2, []int{8}
}

func (m *ListBrandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBrandResponse.Unmarshal(m, b)
}
func (m *ListBrandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBrandResponse.Marshal(b, m, deterministic)
}
func (m *ListBrandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBrandResponse.Merge(m, src)
}
func (m *ListBrandResponse) XXX_Size() int {
	return xxx_messageInfo_ListBrandResponse.Size(m)
}
func (m *ListBrandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBrandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBrandResponse proto.InternalMessageInfo

func (m *ListBrandResponse) GetCategories() []*Brand {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *ListBrandResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type DeleteBrandRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	DeletedBy            string   `protobuf:"bytes,2,opt,name=DeletedBy,proto3" json:"DeletedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBrandRequest) Reset()         { *m = DeleteBrandRequest{} }
func (m *DeleteBrandRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBrandRequest) ProtoMessage()    {}
func (*DeleteBrandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c56364b3e48638d2, []int{9}
}

func (m *DeleteBrandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBrandRequest.Unmarshal(m, b)
}
func (m *DeleteBrandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBrandRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBrandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBrandRequest.Merge(m, src)
}
func (m *DeleteBrandRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBrandRequest.Size(m)
}
func (m *DeleteBrandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBrandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBrandRequest proto.InternalMessageInfo

func (m *DeleteBrandRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *DeleteBrandRequest) GetDeletedBy() string {
	if m != nil {
		return m.DeletedBy
	}
	return ""
}

func init() {
	proto.RegisterEnum("brand.Status", Status_name, Status_value)
	proto.RegisterEnum("brand.SortBy", SortBy_name, SortBy_value)
	proto.RegisterType((*Brand)(nil), "brand.Brand")
	proto.RegisterType((*CreateBrandRequest)(nil), "brand.CreateBrandRequest")
	proto.RegisterType((*CreateBrandResponse)(nil), "brand.CreateBrandResponse")
	proto.RegisterType((*GetBrandRequest)(nil), "brand.GetBrandRequest")
	proto.RegisterType((*GetBrandResponse)(nil), "brand.GetBrandResponse")
	proto.RegisterType((*UpdateBrandRequest)(nil), "brand.UpdateBrandRequest")
	proto.RegisterType((*UpdateBrandResponse)(nil), "brand.UpdateBrandResponse")
	proto.RegisterType((*ListBrandRequest)(nil), "brand.ListBrandRequest")
	proto.RegisterType((*ListBrandResponse)(nil), "brand.ListBrandResponse")
	proto.RegisterType((*DeleteBrandRequest)(nil), "brand.DeleteBrandRequest")
}

func init() {
	proto.RegisterFile("proto/v1/server/brand/brand.proto", fileDescriptor_c56364b3e48638d2)
}

var fileDescriptor_c56364b3e48638d2 = []byte{
	// 691 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x56, 0x5f, 0x6b, 0xd3, 0x50,
	0x14, 0x6f, 0xd2, 0xa6, 0x7f, 0x4e, 0xeb, 0xac, 0x67, 0xb2, 0x65, 0x99, 0x68, 0x17, 0x18, 0x94,
	0x21, 0x0d, 0xd6, 0x17, 0x5f, 0x04, 0x97, 0x76, 0x93, 0xc1, 0x50, 0x48, 0x37, 0x04, 0xdf, 0xb2,
	0xf5, 0x6e, 0x06, 0x9b, 0xa4, 0x26, 0xb7, 0x95, 0x7e, 0x05, 0xc1, 0xcf, 0xa3, 0x9f, 0xc5, 0x57,
	0x3f, 0x88, 0x92, 0x7b, 0x6f, 0x6e, 0xd3, 0xb4, 0x6c, 0xa3, 0xb2, 0x27, 0x5f, 0x4a, 0xcf, 0xef,
	0x9c, 0xfc, 0xf2, 0x3b, 0xbf, 0x7b, 0xee, 0x21, 0xb0, 0x37, 0x8e, 0x42, 0x1a, 0x5a, 0xd3, 0x17,
	0x56, 0x4c, 0xa2, 0x29, 0x89, 0xac, 0x8b, 0xc8, 0x0d, 0x86, 0xfc, 0xb7, 0xc3, 0x72, 0xa8, 0xb1,
	0xc0, 0x78, 0x76, 0x1d, 0x86, 0xd7, 0x23, 0x62, 0x31, 0xf0, 0x62, 0x72, 0x65, 0x51, 0xcf, 0x27,
	0x31, 0x75, 0xfd, 0x31, 0xaf, 0x33, 0x76, 0xf3, 0x05, 0xc4, 0x1f, 0xd3, 0x19, 0x4f, 0x9a, 0xbf,
	0x54, 0xd0, 0xec, 0x84, 0x07, 0x37, 0x40, 0x3d, 0xe9, 0xeb, 0x4a, 0x4b, 0x69, 0xd7, 0x1c, 0xf5,
	0xa4, 0x8f, 0x08, 0xa5, 0x77, 0xae, 0x4f, 0x74, 0x95, 0x21, 0xec, 0x3f, 0xee, 0x43, 0x79, 0x40,
	0x5d, 0x3a, 0x89, 0xf5, 0x62, 0x4b, 0x69, 0x6f, 0x74, 0x1f, 0x74, 0xb8, 0x20, 0x0e, 0x3a, 0x22,
	0x89, 0xaf, 0xa0, 0xd6, 0x8b, 0x88, 0x4b, 0xc9, 0xf0, 0x90, 0xea, 0xa5, 0x96, 0xd2, 0xae, 0x77,
	0x8d, 0x0e, 0x57, 0xd1, 0x49, 0x55, 0x74, 0xce, 0x52, 0x99, 0xce, 0xbc, 0x18, 0x9f, 0xc8, 0x27,
	0xed, 0x99, 0xae, 0xb1, 0x37, 0xcf, 0x81, 0x84, 0xf7, 0x7c, 0x3c, 0x14, 0xbc, 0xe5, 0xdb, 0x79,
	0x65, 0x71, 0xc2, 0x2b, 0x02, 0x7b, 0xa6, 0x57, 0x38, 0xaf, 0x04, 0x12, 0xde, 0x3e, 0x19, 0x11,
	0xce, 0x5b, 0xbd, 0x9d, 0x57, 0x16, 0x27, 0xbc, 0x22, 0xb0, 0x67, 0x7a, 0x8d, 0xf3, 0x4a, 0xc0,
	0xfc, 0xa3, 0x00, 0x72, 0xf5, 0xcc, 0x62, 0x87, 0x7c, 0x99, 0x90, 0x98, 0x4a, 0x67, 0x95, 0x95,
	0xce, 0xaa, 0x77, 0x76, 0xb6, 0xb8, 0xb6, 0xb3, 0xa5, 0x1b, 0x9d, 0xd5, 0xd6, 0x76, 0xb6, 0x9c,
	0x73, 0xd6, 0xdc, 0x87, 0xcd, 0x05, 0x03, 0xe2, 0x71, 0x18, 0xc4, 0x24, 0x3f, 0x6b, 0xe6, 0x1e,
	0x3c, 0x7c, 0x4b, 0xe8, 0x82, 0x49, 0xf9, 0x92, 0xef, 0x2a, 0x34, 0xe7, 0x35, 0xab, 0x79, 0xfe,
	0xa3, 0x99, 0x35, 0x7f, 0x28, 0x80, 0x3c, 0xba, 0xc9, 0xb6, 0x7f, 0x74, 0x64, 0xae, 0xbc, 0xb4,
	0xb6, 0x72, 0x2d, 0xaf, 0xfc, 0xa7, 0x02, 0x9b, 0x0b, 0xca, 0xef, 0xe5, 0x30, 0xef, 0x45, 0xfa,
	0x37, 0x15, 0x9a, 0xa7, 0x5e, 0xbc, 0x38, 0xa9, 0x89, 0xa6, 0x30, 0xa2, 0xf6, 0x8c, 0x69, 0xcf,
	0x68, 0x62, 0xa0, 0x23, 0x92, 0x68, 0x42, 0x83, 0xff, 0xeb, 0x85, 0xa3, 0x89, 0x1f, 0x88, 0xb6,
	0x16, 0xb0, 0xbb, 0xb6, 0xf7, 0x18, 0xb4, 0x53, 0xcf, 0xf7, 0x78, 0x6b, 0x9a, 0xc3, 0x03, 0xdc,
	0x82, 0xf2, 0xfb, 0xab, 0xab, 0x98, 0xf0, 0x0b, 0xac, 0x39, 0x22, 0xc2, 0xa7, 0x00, 0x03, 0xe2,
	0x46, 0x97, 0x9f, 0xce, 0x48, 0xe4, 0x8b, 0x2b, 0x9a, 0x41, 0x92, 0x96, 0x07, 0xd4, 0x8d, 0x68,
	0xdf, 0xa5, 0x24, 0x9d, 0x33, 0x09, 0xa0, 0x0e, 0x95, 0xa3, 0x60, 0xc8, 0x72, 0x55, 0x96, 0x4b,
	0x43, 0xf3, 0x03, 0x3c, 0xca, 0x78, 0x21, 0x0e, 0xf1, 0x39, 0x40, 0xcf, 0xa5, 0xe4, 0x3a, 0x8c,
	0x3c, 0x12, 0xeb, 0x4a, 0xab, 0xd8, 0xae, 0x77, 0x1b, 0xa2, 0x0b, 0x5e, 0x99, 0xc9, 0x27, 0x8d,
	0x9c, 0x85, 0xd4, 0x1d, 0x31, 0x33, 0x34, 0x87, 0x07, 0xa6, 0x0d, 0xc8, 0x77, 0xe8, 0x8d, 0x93,
	0xbd, 0xb0, 0x7a, 0xd5, 0xdc, 0xea, 0x3d, 0xb0, 0x52, 0x27, 0xb1, 0x0e, 0x95, 0xf3, 0xe0, 0x73,
	0x10, 0x7e, 0x0d, 0x9a, 0x05, 0x04, 0x28, 0x1f, 0x5e, 0x52, 0x6f, 0x4a, 0x9a, 0x0a, 0x36, 0xa0,
	0x7a, 0x12, 0xb8, 0x3c, 0x52, 0x0f, 0x76, 0xd3, 0x53, 0xc4, 0x2a, 0x94, 0xfa, 0x47, 0x83, 0x5e,
	0xb3, 0x80, 0x15, 0x28, 0x1e, 0x0e, 0x7a, 0x4d, 0xa5, 0xfb, 0x5b, 0x85, 0x06, 0x13, 0x33, 0x20,
	0xd1, 0xd4, 0xbb, 0x24, 0x78, 0x0c, 0xf5, 0xcc, 0x5e, 0xc3, 0x1d, 0xd1, 0xe1, 0xf2, 0xb2, 0x37,
	0x8c, 0x55, 0x29, 0x6e, 0x96, 0x59, 0xc0, 0xd7, 0x50, 0x4d, 0x97, 0x1a, 0x6e, 0x89, 0xca, 0xdc,
	0x26, 0x34, 0xb6, 0x97, 0x70, 0xf9, 0xf8, 0x31, 0xd4, 0x33, 0x37, 0x49, 0xca, 0x58, 0xde, 0x0b,
	0x52, 0xc6, 0x8a, 0x8b, 0x67, 0x16, 0xf0, 0x0d, 0xd4, 0xe4, 0x51, 0x62, 0xfa, 0xbe, 0xfc, 0xa0,
	0x1b, 0xfa, 0x72, 0x42, 0x32, 0xd8, 0x50, 0xcf, 0x9c, 0x99, 0x54, 0xb2, 0x7c, 0x8e, 0xc6, 0xd6,
	0xd2, 0x45, 0x3c, 0x4a, 0xbe, 0x47, 0xcc, 0x82, 0xbd, 0xf3, 0x71, 0xbb, 0x63, 0xad, 0xfc, 0xee,
	0xb9, 0x28, 0x33, 0xf8, 0xe5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xb2, 0x97, 0xa2, 0x17,
	0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BrandServiceClient is the client API for BrandService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BrandServiceClient interface {
	CreateBrand(ctx context.Context, in *CreateBrandRequest, opts ...grpc.CallOption) (*CreateBrandResponse, error)
	GetBrand(ctx context.Context, in *GetBrandRequest, opts ...grpc.CallOption) (*GetBrandResponse, error)
	UpdateBrand(ctx context.Context, in *UpdateBrandRequest, opts ...grpc.CallOption) (*UpdateBrandResponse, error)
	ListBrand(ctx context.Context, in *ListBrandRequest, opts ...grpc.CallOption) (*ListBrandResponse, error)
	DeleteBrand(ctx context.Context, in *DeleteBrandRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type brandServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBrandServiceClient(cc grpc.ClientConnInterface) BrandServiceClient {
	return &brandServiceClient{cc}
}

func (c *brandServiceClient) CreateBrand(ctx context.Context, in *CreateBrandRequest, opts ...grpc.CallOption) (*CreateBrandResponse, error) {
	out := new(CreateBrandResponse)
	err := c.cc.Invoke(ctx, "/brand.BrandService/CreateBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brandServiceClient) GetBrand(ctx context.Context, in *GetBrandRequest, opts ...grpc.CallOption) (*GetBrandResponse, error) {
	out := new(GetBrandResponse)
	err := c.cc.Invoke(ctx, "/brand.BrandService/GetBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brandServiceClient) UpdateBrand(ctx context.Context, in *UpdateBrandRequest, opts ...grpc.CallOption) (*UpdateBrandResponse, error) {
	out := new(UpdateBrandResponse)
	err := c.cc.Invoke(ctx, "/brand.BrandService/UpdateBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brandServiceClient) ListBrand(ctx context.Context, in *ListBrandRequest, opts ...grpc.CallOption) (*ListBrandResponse, error) {
	out := new(ListBrandResponse)
	err := c.cc.Invoke(ctx, "/brand.BrandService/ListBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brandServiceClient) DeleteBrand(ctx context.Context, in *DeleteBrandRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/brand.BrandService/DeleteBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BrandServiceServer is the server API for BrandService service.
type BrandServiceServer interface {
	CreateBrand(context.Context, *CreateBrandRequest) (*CreateBrandResponse, error)
	GetBrand(context.Context, *GetBrandRequest) (*GetBrandResponse, error)
	UpdateBrand(context.Context, *UpdateBrandRequest) (*UpdateBrandResponse, error)
	ListBrand(context.Context, *ListBrandRequest) (*ListBrandResponse, error)
	DeleteBrand(context.Context, *DeleteBrandRequest) (*empty.Empty, error)
}

// UnimplementedBrandServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBrandServiceServer struct {
}

func (*UnimplementedBrandServiceServer) CreateBrand(ctx context.Context, req *CreateBrandRequest) (*CreateBrandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBrand not implemented")
}
func (*UnimplementedBrandServiceServer) GetBrand(ctx context.Context, req *GetBrandRequest) (*GetBrandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrand not implemented")
}
func (*UnimplementedBrandServiceServer) UpdateBrand(ctx context.Context, req *UpdateBrandRequest) (*UpdateBrandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBrand not implemented")
}
func (*UnimplementedBrandServiceServer) ListBrand(ctx context.Context, req *ListBrandRequest) (*ListBrandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBrand not implemented")
}
func (*UnimplementedBrandServiceServer) DeleteBrand(ctx context.Context, req *DeleteBrandRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBrand not implemented")
}

func RegisterBrandServiceServer(s *grpc.Server, srv BrandServiceServer) {
	s.RegisterService(&_BrandService_serviceDesc, srv)
}

func _BrandService_CreateBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandServiceServer).CreateBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brand.BrandService/CreateBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandServiceServer).CreateBrand(ctx, req.(*CreateBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrandService_GetBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandServiceServer).GetBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brand.BrandService/GetBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandServiceServer).GetBrand(ctx, req.(*GetBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrandService_UpdateBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandServiceServer).UpdateBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brand.BrandService/UpdateBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandServiceServer).UpdateBrand(ctx, req.(*UpdateBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrandService_ListBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandServiceServer).ListBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brand.BrandService/ListBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandServiceServer).ListBrand(ctx, req.(*ListBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrandService_DeleteBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBrandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandServiceServer).DeleteBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brand.BrandService/DeleteBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandServiceServer).DeleteBrand(ctx, req.(*DeleteBrandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BrandService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "brand.BrandService",
	HandlerType: (*BrandServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBrand",
			Handler:    _BrandService_CreateBrand_Handler,
		},
		{
			MethodName: "GetBrand",
			Handler:    _BrandService_GetBrand_Handler,
		},
		{
			MethodName: "UpdateBrand",
			Handler:    _BrandService_UpdateBrand_Handler,
		},
		{
			MethodName: "ListBrand",
			Handler:    _BrandService_ListBrand_Handler,
		},
		{
			MethodName: "DeleteBrand",
			Handler:    _BrandService_DeleteBrand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/v1/server/brand/brand.proto",
}
