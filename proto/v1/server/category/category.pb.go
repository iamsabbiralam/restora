// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/v1/server/category/category.proto

package category

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_Unknown  Status = 0
	Status_Active   Status = 1
	Status_Inactive Status = 2
)

var Status_name = map[int32]string{
	0: "Unknown",
	1: "Active",
	2: "Inactive",
}

var Status_value = map[string]int32{
	"Unknown":  0,
	"Active":   1,
	"Inactive": 2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9f0a7edd1f771ee0, []int{0}
}

type SortBy int32

const (
	SortBy_DESC SortBy = 0
	SortBy_ASC  SortBy = 1
)

var SortBy_name = map[int32]string{
	0: "DESC",
	1: "ASC",
}

var SortBy_value = map[string]int32{
	"DESC": 0,
	"ASC":  1,
}

func (x SortBy) String() string {
	return proto.EnumName(SortBy_name, int32(x))
}

func (SortBy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9f0a7edd1f771ee0, []int{1}
}

type Category struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Status               Status               `protobuf:"varint,3,opt,name=Status,proto3,enum=category.Status" json:"Status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	CreatedBy            string               `protobuf:"bytes,5,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,7,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	DeletedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
	DeletedBy            string               `protobuf:"bytes,9,opt,name=DeletedBy,proto3" json:"DeletedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Category) Reset()         { *m = Category{} }
func (m *Category) String() string { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()    {}
func (*Category) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f0a7edd1f771ee0, []int{0}
}

func (m *Category) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Category.Unmarshal(m, b)
}
func (m *Category) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Category.Marshal(b, m, deterministic)
}
func (m *Category) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Category.Merge(m, src)
}
func (m *Category) XXX_Size() int {
	return xxx_messageInfo_Category.Size(m)
}
func (m *Category) XXX_DiscardUnknown() {
	xxx_messageInfo_Category.DiscardUnknown(m)
}

var xxx_messageInfo_Category proto.InternalMessageInfo

func (m *Category) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Category) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Category) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *Category) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Category) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *Category) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Category) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

func (m *Category) GetDeletedAt() *timestamp.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

func (m *Category) GetDeletedBy() string {
	if m != nil {
		return m.DeletedBy
	}
	return ""
}

type CreateCategoryRequest struct {
	Name                 string               `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Status               Status               `protobuf:"varint,2,opt,name=Status,proto3,enum=category.Status" json:"Status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	CreatedBy            string               `protobuf:"bytes,4,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,6,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateCategoryRequest) Reset()         { *m = CreateCategoryRequest{} }
func (m *CreateCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCategoryRequest) ProtoMessage()    {}
func (*CreateCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f0a7edd1f771ee0, []int{1}
}

func (m *CreateCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCategoryRequest.Unmarshal(m, b)
}
func (m *CreateCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCategoryRequest.Marshal(b, m, deterministic)
}
func (m *CreateCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCategoryRequest.Merge(m, src)
}
func (m *CreateCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCategoryRequest.Size(m)
}
func (m *CreateCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCategoryRequest proto.InternalMessageInfo

func (m *CreateCategoryRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateCategoryRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *CreateCategoryRequest) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *CreateCategoryRequest) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *CreateCategoryRequest) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *CreateCategoryRequest) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

type CreateCategoryResponse struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCategoryResponse) Reset()         { *m = CreateCategoryResponse{} }
func (m *CreateCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCategoryResponse) ProtoMessage()    {}
func (*CreateCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f0a7edd1f771ee0, []int{2}
}

func (m *CreateCategoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCategoryResponse.Unmarshal(m, b)
}
func (m *CreateCategoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCategoryResponse.Marshal(b, m, deterministic)
}
func (m *CreateCategoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCategoryResponse.Merge(m, src)
}
func (m *CreateCategoryResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCategoryResponse.Size(m)
}
func (m *CreateCategoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCategoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCategoryResponse proto.InternalMessageInfo

func (m *CreateCategoryResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type GetCategoryRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCategoryRequest) Reset()         { *m = GetCategoryRequest{} }
func (m *GetCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetCategoryRequest) ProtoMessage()    {}
func (*GetCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f0a7edd1f771ee0, []int{3}
}

func (m *GetCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCategoryRequest.Unmarshal(m, b)
}
func (m *GetCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCategoryRequest.Marshal(b, m, deterministic)
}
func (m *GetCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCategoryRequest.Merge(m, src)
}
func (m *GetCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetCategoryRequest.Size(m)
}
func (m *GetCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCategoryRequest proto.InternalMessageInfo

func (m *GetCategoryRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type GetCategoryResponse struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Status               Status               `protobuf:"varint,3,opt,name=Status,proto3,enum=category.Status" json:"Status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	CreatedBy            string               `protobuf:"bytes,5,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,7,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetCategoryResponse) Reset()         { *m = GetCategoryResponse{} }
func (m *GetCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetCategoryResponse) ProtoMessage()    {}
func (*GetCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f0a7edd1f771ee0, []int{4}
}

func (m *GetCategoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCategoryResponse.Unmarshal(m, b)
}
func (m *GetCategoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCategoryResponse.Marshal(b, m, deterministic)
}
func (m *GetCategoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCategoryResponse.Merge(m, src)
}
func (m *GetCategoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetCategoryResponse.Size(m)
}
func (m *GetCategoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCategoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCategoryResponse proto.InternalMessageInfo

func (m *GetCategoryResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *GetCategoryResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetCategoryResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *GetCategoryResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetCategoryResponse) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *GetCategoryResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *GetCategoryResponse) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

type UpdateCategoryRequest struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Status               Status               `protobuf:"varint,3,opt,name=Status,proto3,enum=category.Status" json:"Status,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,5,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateCategoryRequest) Reset()         { *m = UpdateCategoryRequest{} }
func (m *UpdateCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCategoryRequest) ProtoMessage()    {}
func (*UpdateCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f0a7edd1f771ee0, []int{5}
}

func (m *UpdateCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCategoryRequest.Unmarshal(m, b)
}
func (m *UpdateCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCategoryRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCategoryRequest.Merge(m, src)
}
func (m *UpdateCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCategoryRequest.Size(m)
}
func (m *UpdateCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCategoryRequest proto.InternalMessageInfo

func (m *UpdateCategoryRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *UpdateCategoryRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateCategoryRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *UpdateCategoryRequest) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *UpdateCategoryRequest) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

type UpdateCategoryResponse struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Status               Status               `protobuf:"varint,3,opt,name=Status,proto3,enum=category.Status" json:"Status,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,5,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateCategoryResponse) Reset()         { *m = UpdateCategoryResponse{} }
func (m *UpdateCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCategoryResponse) ProtoMessage()    {}
func (*UpdateCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f0a7edd1f771ee0, []int{6}
}

func (m *UpdateCategoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCategoryResponse.Unmarshal(m, b)
}
func (m *UpdateCategoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCategoryResponse.Marshal(b, m, deterministic)
}
func (m *UpdateCategoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCategoryResponse.Merge(m, src)
}
func (m *UpdateCategoryResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateCategoryResponse.Size(m)
}
func (m *UpdateCategoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCategoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCategoryResponse proto.InternalMessageInfo

func (m *UpdateCategoryResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *UpdateCategoryResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateCategoryResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *UpdateCategoryResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *UpdateCategoryResponse) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

type ListCategoryRequest struct {
	SortBy               SortBy   `protobuf:"varint,1,opt,name=SortBy,proto3,enum=category.SortBy" json:"SortBy,omitempty"`
	SortByColumn         string   `protobuf:"bytes,2,opt,name=SortByColumn,proto3" json:"SortByColumn,omitempty"`
	Status               Status   `protobuf:"varint,3,opt,name=Status,proto3,enum=category.Status" json:"Status,omitempty"`
	Limit                int32    `protobuf:"varint,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset               int32    `protobuf:"varint,5,opt,name=Offset,proto3" json:"Offset,omitempty"`
	SearchTerm           string   `protobuf:"bytes,6,opt,name=SearchTerm,proto3" json:"SearchTerm,omitempty"`
	StartDate            string   `protobuf:"bytes,7,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate              string   `protobuf:"bytes,8,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCategoryRequest) Reset()         { *m = ListCategoryRequest{} }
func (m *ListCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*ListCategoryRequest) ProtoMessage()    {}
func (*ListCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f0a7edd1f771ee0, []int{7}
}

func (m *ListCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCategoryRequest.Unmarshal(m, b)
}
func (m *ListCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCategoryRequest.Marshal(b, m, deterministic)
}
func (m *ListCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCategoryRequest.Merge(m, src)
}
func (m *ListCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_ListCategoryRequest.Size(m)
}
func (m *ListCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCategoryRequest proto.InternalMessageInfo

func (m *ListCategoryRequest) GetSortBy() SortBy {
	if m != nil {
		return m.SortBy
	}
	return SortBy_DESC
}

func (m *ListCategoryRequest) GetSortByColumn() string {
	if m != nil {
		return m.SortByColumn
	}
	return ""
}

func (m *ListCategoryRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *ListCategoryRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListCategoryRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListCategoryRequest) GetSearchTerm() string {
	if m != nil {
		return m.SearchTerm
	}
	return ""
}

func (m *ListCategoryRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *ListCategoryRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

type ListCategoryResponse struct {
	Categories           []*Category `protobuf:"bytes,1,rep,name=Categories,proto3" json:"Categories,omitempty"`
	Total                int32       `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListCategoryResponse) Reset()         { *m = ListCategoryResponse{} }
func (m *ListCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*ListCategoryResponse) ProtoMessage()    {}
func (*ListCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f0a7edd1f771ee0, []int{8}
}

func (m *ListCategoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCategoryResponse.Unmarshal(m, b)
}
func (m *ListCategoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCategoryResponse.Marshal(b, m, deterministic)
}
func (m *ListCategoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCategoryResponse.Merge(m, src)
}
func (m *ListCategoryResponse) XXX_Size() int {
	return xxx_messageInfo_ListCategoryResponse.Size(m)
}
func (m *ListCategoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCategoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCategoryResponse proto.InternalMessageInfo

func (m *ListCategoryResponse) GetCategories() []*Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *ListCategoryResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type DeleteCategoryRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCategoryRequest) Reset()         { *m = DeleteCategoryRequest{} }
func (m *DeleteCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCategoryRequest) ProtoMessage()    {}
func (*DeleteCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f0a7edd1f771ee0, []int{9}
}

func (m *DeleteCategoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCategoryRequest.Unmarshal(m, b)
}
func (m *DeleteCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCategoryRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCategoryRequest.Merge(m, src)
}
func (m *DeleteCategoryRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCategoryRequest.Size(m)
}
func (m *DeleteCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCategoryRequest proto.InternalMessageInfo

func (m *DeleteCategoryRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func init() {
	proto.RegisterEnum("category.Status", Status_name, Status_value)
	proto.RegisterEnum("category.SortBy", SortBy_name, SortBy_value)
	proto.RegisterType((*Category)(nil), "category.Category")
	proto.RegisterType((*CreateCategoryRequest)(nil), "category.CreateCategoryRequest")
	proto.RegisterType((*CreateCategoryResponse)(nil), "category.CreateCategoryResponse")
	proto.RegisterType((*GetCategoryRequest)(nil), "category.GetCategoryRequest")
	proto.RegisterType((*GetCategoryResponse)(nil), "category.GetCategoryResponse")
	proto.RegisterType((*UpdateCategoryRequest)(nil), "category.UpdateCategoryRequest")
	proto.RegisterType((*UpdateCategoryResponse)(nil), "category.UpdateCategoryResponse")
	proto.RegisterType((*ListCategoryRequest)(nil), "category.ListCategoryRequest")
	proto.RegisterType((*ListCategoryResponse)(nil), "category.ListCategoryResponse")
	proto.RegisterType((*DeleteCategoryRequest)(nil), "category.DeleteCategoryRequest")
}

func init() {
	proto.RegisterFile("proto/v1/server/category/category.proto", fileDescriptor_9f0a7edd1f771ee0)
}

var fileDescriptor_9f0a7edd1f771ee0 = []byte{
	// 684 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x56, 0xcd, 0x6e, 0xda, 0x40,
	0x10, 0xc6, 0x06, 0x03, 0x19, 0x22, 0x8a, 0xa6, 0x09, 0xb2, 0x9c, 0x34, 0x41, 0x56, 0xa5, 0xa0,
	0x1c, 0xb0, 0x4a, 0x2f, 0xbd, 0x06, 0x88, 0xaa, 0xa8, 0x51, 0x23, 0xd9, 0xe1, 0xd2, 0x53, 0x1d,
	0xb2, 0x49, 0xad, 0x62, 0x9b, 0xda, 0x0b, 0x15, 0x0f, 0xd0, 0x27, 0xe8, 0x63, 0xf4, 0x19, 0xda,
	0x67, 0xe9, 0xa3, 0x54, 0xf6, 0xae, 0x17, 0xdb, 0x31, 0x45, 0xa1, 0xca, 0xa9, 0xb7, 0x9d, 0x1f,
	0x7f, 0xfe, 0xe6, 0x9b, 0x99, 0xb5, 0xe1, 0x64, 0x16, 0xf8, 0xd4, 0x37, 0x16, 0xaf, 0x8c, 0x90,
	0x04, 0x0b, 0x12, 0x18, 0x13, 0x9b, 0x92, 0x7b, 0x3f, 0x58, 0x8a, 0x43, 0x2f, 0xce, 0xc0, 0x7a,
	0x62, 0x6b, 0xc7, 0xf7, 0xbe, 0x7f, 0x3f, 0x25, 0x46, 0xec, 0xbf, 0x99, 0xdf, 0x19, 0xd4, 0x71,
	0x49, 0x48, 0x6d, 0x77, 0xc6, 0x52, 0xb5, 0x83, 0x7c, 0x02, 0x71, 0x67, 0x94, 0xe3, 0xe8, 0xbf,
	0x65, 0xa8, 0x0f, 0x39, 0x14, 0x36, 0x41, 0xbe, 0x18, 0xa9, 0x52, 0x47, 0xea, 0xee, 0x98, 0xf2,
	0xc5, 0x08, 0x11, 0x2a, 0xef, 0x6d, 0x97, 0xa8, 0x72, 0xec, 0x89, 0xcf, 0xd8, 0x85, 0xaa, 0x45,
	0x6d, 0x3a, 0x0f, 0xd5, 0x72, 0x47, 0xea, 0x36, 0xfb, 0xad, 0x9e, 0x60, 0xc6, 0xfc, 0x26, 0x8f,
	0xe3, 0x1b, 0xd8, 0x19, 0x06, 0xc4, 0xa6, 0xe4, 0xf6, 0x8c, 0xaa, 0x95, 0x8e, 0xd4, 0x6d, 0xf4,
	0xb5, 0x1e, 0xe3, 0xd2, 0x4b, 0xb8, 0xf4, 0xae, 0x13, 0xb2, 0xe6, 0x2a, 0x19, 0x0f, 0xc5, 0x93,
	0x83, 0xa5, 0xaa, 0xc4, 0x2f, 0x5f, 0x39, 0x22, 0xdc, 0xf1, 0xec, 0x96, 0xe3, 0x56, 0x37, 0xe3,
	0x8a, 0xe4, 0x08, 0x97, 0x1b, 0x83, 0xa5, 0x5a, 0x63, 0xb8, 0xc2, 0x11, 0xe1, 0x8e, 0xc8, 0x94,
	0x30, 0xdc, 0xfa, 0x66, 0x5c, 0x91, 0x1c, 0xe1, 0x72, 0x63, 0xb0, 0x54, 0x77, 0x18, 0xae, 0x70,
	0xe8, 0xdf, 0x64, 0xd8, 0x67, 0xec, 0x13, 0xa1, 0x4d, 0xf2, 0x65, 0x4e, 0x42, 0x2a, 0xf4, 0x95,
	0x0a, 0xf5, 0x95, 0x1f, 0xa3, 0x6f, 0x79, 0x6b, 0x7d, 0x2b, 0x7f, 0xd5, 0x57, 0xd9, 0x5a, 0xdf,
	0x6a, 0x4e, 0x5f, 0xbd, 0x0b, 0xed, 0xbc, 0x0c, 0xe1, 0xcc, 0xf7, 0x42, 0x92, 0x9f, 0x3b, 0xfd,
	0x25, 0xe0, 0x5b, 0x42, 0xf3, 0x6a, 0xe5, 0xb3, 0xbe, 0xcb, 0xf0, 0x3c, 0x93, 0x56, 0x8c, 0xf6,
	0x7f, 0x4d, 0xb1, 0xfe, 0x53, 0x82, 0x7d, 0x66, 0x6d, 0xd0, 0xef, 0xdf, 0x75, 0x59, 0xf1, 0xaf,
	0x6c, 0xcd, 0x5f, 0xc9, 0xf3, 0xff, 0x25, 0x41, 0x3b, 0xcf, 0xff, 0xa9, 0x1a, 0xfb, 0x24, 0x05,
	0x44, 0x63, 0x79, 0xe9, 0x84, 0x0f, 0xc6, 0x37, 0x62, 0xe6, 0x07, 0x74, 0xb0, 0x8c, 0x2b, 0xc8,
	0x32, 0x8b, 0xfd, 0x26, 0x8f, 0xa3, 0x0e, 0xbb, 0xec, 0x34, 0xf4, 0xa7, 0x73, 0xd7, 0xe3, 0xf5,
	0x65, 0x7c, 0x8f, 0xa8, 0x73, 0x0f, 0x94, 0x4b, 0xc7, 0x75, 0x58, 0x8d, 0x8a, 0xc9, 0x0c, 0x6c,
	0x43, 0xf5, 0xea, 0xee, 0x2e, 0x24, 0x6c, 0xc3, 0x15, 0x93, 0x5b, 0x78, 0x04, 0x60, 0x11, 0x3b,
	0x98, 0x7c, 0xba, 0x26, 0x81, 0xcb, 0x77, 0x38, 0xe5, 0x89, 0x6a, 0xb7, 0xa8, 0x1d, 0xd0, 0x91,
	0x4d, 0x49, 0x32, 0x7c, 0xc2, 0x81, 0x2a, 0xd4, 0xce, 0xbd, 0xdb, 0x38, 0x56, 0x8f, 0x63, 0x89,
	0xa9, 0x7f, 0x84, 0xbd, 0xac, 0x28, 0xbc, 0xa7, 0x7d, 0x00, 0xee, 0x73, 0x48, 0xa8, 0x4a, 0x9d,
	0x72, 0xb7, 0xd1, 0xc7, 0x55, 0x2d, 0x22, 0x3f, 0x95, 0x15, 0x55, 0x74, 0xed, 0x53, 0x7b, 0x1a,
	0x0b, 0xa3, 0x98, 0xcc, 0xd0, 0x4f, 0x60, 0x9f, 0xdd, 0xb9, 0x1b, 0xe6, 0xfe, 0xd4, 0x48, 0xa4,
	0xc3, 0x06, 0xd4, 0xc6, 0xde, 0x67, 0xcf, 0xff, 0xea, 0xb5, 0x4a, 0x08, 0x50, 0x3d, 0x9b, 0x50,
	0x67, 0x41, 0x5a, 0x12, 0xee, 0x42, 0xfd, 0xc2, 0xb3, 0x99, 0x25, 0x9f, 0x1e, 0x24, 0x9d, 0xc3,
	0x3a, 0x54, 0x46, 0xe7, 0xd6, 0xb0, 0x55, 0xc2, 0x1a, 0x94, 0xcf, 0xac, 0x61, 0x4b, 0xea, 0xff,
	0x28, 0xc3, 0xb3, 0xe4, 0x8d, 0x16, 0x09, 0x16, 0xce, 0x84, 0xe0, 0x18, 0x9a, 0xd9, 0x9b, 0x0e,
	0x8f, 0x53, 0x25, 0x15, 0x7d, 0x0a, 0xb4, 0xce, 0xfa, 0x04, 0xa6, 0x94, 0x5e, 0xc2, 0x4b, 0x68,
	0xa4, 0xee, 0x3b, 0x3c, 0x5c, 0x3d, 0xf2, 0xf0, 0xb6, 0xd4, 0x5e, 0xac, 0x89, 0x0a, 0xb4, 0x31,
	0x34, 0xb3, 0x7b, 0x96, 0x26, 0x59, 0x78, 0x83, 0xa4, 0x49, 0x16, 0xaf, 0xa8, 0x5e, 0xc2, 0x2b,
	0xd8, 0x4d, 0x37, 0x1a, 0x53, 0x3c, 0x0a, 0xb6, 0x42, 0x3b, 0x5a, 0x17, 0x16, 0x80, 0xef, 0xa0,
	0x99, 0xed, 0x6b, 0x9a, 0x67, 0x61, 0xc7, 0xb5, 0xf6, 0x83, 0x3d, 0x3e, 0x8f, 0x7e, 0x79, 0xf4,
	0xd2, 0xe0, 0xf0, 0x83, 0xd6, 0x33, 0xd6, 0xfd, 0x63, 0xdd, 0x54, 0xe3, 0xc8, 0xeb, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xf0, 0x12, 0xb8, 0x54, 0x86, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CategoryServiceClient is the client API for CategoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CategoryServiceClient interface {
	CreateCategory(ctx context.Context, in *CreateCategoryRequest, opts ...grpc.CallOption) (*CreateCategoryResponse, error)
	GetCategory(ctx context.Context, in *GetCategoryRequest, opts ...grpc.CallOption) (*GetCategoryResponse, error)
	UpdateCategory(ctx context.Context, in *UpdateCategoryRequest, opts ...grpc.CallOption) (*UpdateCategoryResponse, error)
	ListCategory(ctx context.Context, in *ListCategoryRequest, opts ...grpc.CallOption) (*ListCategoryResponse, error)
	DeleteCategory(ctx context.Context, in *DeleteCategoryRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type categoryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCategoryServiceClient(cc grpc.ClientConnInterface) CategoryServiceClient {
	return &categoryServiceClient{cc}
}

func (c *categoryServiceClient) CreateCategory(ctx context.Context, in *CreateCategoryRequest, opts ...grpc.CallOption) (*CreateCategoryResponse, error) {
	out := new(CreateCategoryResponse)
	err := c.cc.Invoke(ctx, "/category.CategoryService/CreateCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryServiceClient) GetCategory(ctx context.Context, in *GetCategoryRequest, opts ...grpc.CallOption) (*GetCategoryResponse, error) {
	out := new(GetCategoryResponse)
	err := c.cc.Invoke(ctx, "/category.CategoryService/GetCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryServiceClient) UpdateCategory(ctx context.Context, in *UpdateCategoryRequest, opts ...grpc.CallOption) (*UpdateCategoryResponse, error) {
	out := new(UpdateCategoryResponse)
	err := c.cc.Invoke(ctx, "/category.CategoryService/UpdateCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryServiceClient) ListCategory(ctx context.Context, in *ListCategoryRequest, opts ...grpc.CallOption) (*ListCategoryResponse, error) {
	out := new(ListCategoryResponse)
	err := c.cc.Invoke(ctx, "/category.CategoryService/ListCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryServiceClient) DeleteCategory(ctx context.Context, in *DeleteCategoryRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/category.CategoryService/DeleteCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CategoryServiceServer is the server API for CategoryService service.
type CategoryServiceServer interface {
	CreateCategory(context.Context, *CreateCategoryRequest) (*CreateCategoryResponse, error)
	GetCategory(context.Context, *GetCategoryRequest) (*GetCategoryResponse, error)
	UpdateCategory(context.Context, *UpdateCategoryRequest) (*UpdateCategoryResponse, error)
	ListCategory(context.Context, *ListCategoryRequest) (*ListCategoryResponse, error)
	DeleteCategory(context.Context, *DeleteCategoryRequest) (*empty.Empty, error)
}

// UnimplementedCategoryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCategoryServiceServer struct {
}

func (*UnimplementedCategoryServiceServer) CreateCategory(ctx context.Context, req *CreateCategoryRequest) (*CreateCategoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCategory not implemented")
}
func (*UnimplementedCategoryServiceServer) GetCategory(ctx context.Context, req *GetCategoryRequest) (*GetCategoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCategory not implemented")
}
func (*UnimplementedCategoryServiceServer) UpdateCategory(ctx context.Context, req *UpdateCategoryRequest) (*UpdateCategoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCategory not implemented")
}
func (*UnimplementedCategoryServiceServer) ListCategory(ctx context.Context, req *ListCategoryRequest) (*ListCategoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCategory not implemented")
}
func (*UnimplementedCategoryServiceServer) DeleteCategory(ctx context.Context, req *DeleteCategoryRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCategory not implemented")
}

func RegisterCategoryServiceServer(s *grpc.Server, srv CategoryServiceServer) {
	s.RegisterService(&_CategoryService_serviceDesc, srv)
}

func _CategoryService_CreateCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).CreateCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/category.CategoryService/CreateCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).CreateCategory(ctx, req.(*CreateCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CategoryService_GetCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).GetCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/category.CategoryService/GetCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).GetCategory(ctx, req.(*GetCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CategoryService_UpdateCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).UpdateCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/category.CategoryService/UpdateCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).UpdateCategory(ctx, req.(*UpdateCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CategoryService_ListCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).ListCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/category.CategoryService/ListCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).ListCategory(ctx, req.(*ListCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CategoryService_DeleteCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).DeleteCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/category.CategoryService/DeleteCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).DeleteCategory(ctx, req.(*DeleteCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CategoryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "category.CategoryService",
	HandlerType: (*CategoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCategory",
			Handler:    _CategoryService_CreateCategory_Handler,
		},
		{
			MethodName: "GetCategory",
			Handler:    _CategoryService_GetCategory_Handler,
		},
		{
			MethodName: "UpdateCategory",
			Handler:    _CategoryService_UpdateCategory_Handler,
		},
		{
			MethodName: "ListCategory",
			Handler:    _CategoryService_ListCategory_Handler,
		},
		{
			MethodName: "DeleteCategory",
			Handler:    _CategoryService_DeleteCategory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/v1/server/category/category.proto",
}
