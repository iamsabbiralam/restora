// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/v1/server/recipe/recipe.proto

package recipe

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_Unknown  Status = 0
	Status_Active   Status = 1
	Status_Inactive Status = 2
)

var Status_name = map[int32]string{
	0: "Unknown",
	1: "Active",
	2: "Inactive",
}

var Status_value = map[string]int32{
	"Unknown":  0,
	"Active":   1,
	"Inactive": 2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c89a88051f20b159, []int{0}
}

type SortBy int32

const (
	SortBy_DESC SortBy = 0
	SortBy_ASC  SortBy = 1
)

var SortBy_name = map[int32]string{
	0: "DESC",
	1: "ASC",
}

var SortBy_value = map[string]int32{
	"DESC": 0,
	"ASC":  1,
}

func (x SortBy) String() string {
	return proto.EnumName(SortBy_name, int32(x))
}

func (SortBy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c89a88051f20b159, []int{1}
}

type Recipe struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Ingredrient          string               `protobuf:"bytes,3,opt,name=Ingredrient,proto3" json:"Ingredrient,omitempty"`
	Image                string               `protobuf:"bytes,4,opt,name=Image,proto3" json:"Image,omitempty"`
	Description          string               `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	UserID               string               `protobuf:"bytes,6,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AuthorSocialLink     string               `protobuf:"bytes,7,opt,name=AuthorSocialLink,proto3" json:"AuthorSocialLink,omitempty"`
	ReadCount            int64                `protobuf:"varint,8,opt,name=ReadCount,proto3" json:"ReadCount,omitempty"`
	ServingAmount        int64                `protobuf:"varint,9,opt,name=ServingAmount,proto3" json:"ServingAmount,omitempty"`
	CookingTime          *timestamp.Timestamp `protobuf:"bytes,10,opt,name=CookingTime,proto3" json:"CookingTime,omitempty"`
	IsUsed               bool                 `protobuf:"varint,11,opt,name=IsUsed,proto3" json:"IsUsed,omitempty"`
	Status               Status               `protobuf:"varint,12,opt,name=Status,proto3,enum=recipe.Status" json:"Status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,13,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	CreatedBy            string               `protobuf:"bytes,14,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,15,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,16,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	DeletedAt            *timestamp.Timestamp `protobuf:"bytes,17,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
	DeletedBy            string               `protobuf:"bytes,18,opt,name=DeletedBy,proto3" json:"DeletedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Recipe) Reset()         { *m = Recipe{} }
func (m *Recipe) String() string { return proto.CompactTextString(m) }
func (*Recipe) ProtoMessage()    {}
func (*Recipe) Descriptor() ([]byte, []int) {
	return fileDescriptor_c89a88051f20b159, []int{0}
}

func (m *Recipe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Recipe.Unmarshal(m, b)
}
func (m *Recipe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Recipe.Marshal(b, m, deterministic)
}
func (m *Recipe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Recipe.Merge(m, src)
}
func (m *Recipe) XXX_Size() int {
	return xxx_messageInfo_Recipe.Size(m)
}
func (m *Recipe) XXX_DiscardUnknown() {
	xxx_messageInfo_Recipe.DiscardUnknown(m)
}

var xxx_messageInfo_Recipe proto.InternalMessageInfo

func (m *Recipe) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Recipe) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Recipe) GetIngredrient() string {
	if m != nil {
		return m.Ingredrient
	}
	return ""
}

func (m *Recipe) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Recipe) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Recipe) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Recipe) GetAuthorSocialLink() string {
	if m != nil {
		return m.AuthorSocialLink
	}
	return ""
}

func (m *Recipe) GetReadCount() int64 {
	if m != nil {
		return m.ReadCount
	}
	return 0
}

func (m *Recipe) GetServingAmount() int64 {
	if m != nil {
		return m.ServingAmount
	}
	return 0
}

func (m *Recipe) GetCookingTime() *timestamp.Timestamp {
	if m != nil {
		return m.CookingTime
	}
	return nil
}

func (m *Recipe) GetIsUsed() bool {
	if m != nil {
		return m.IsUsed
	}
	return false
}

func (m *Recipe) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *Recipe) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Recipe) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *Recipe) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Recipe) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

func (m *Recipe) GetDeletedAt() *timestamp.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

func (m *Recipe) GetDeletedBy() string {
	if m != nil {
		return m.DeletedBy
	}
	return ""
}

type CreateRecipeRequest struct {
	Title                string               `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Ingredrient          string               `protobuf:"bytes,2,opt,name=Ingredrient,proto3" json:"Ingredrient,omitempty"`
	Image                string               `protobuf:"bytes,3,opt,name=Image,proto3" json:"Image,omitempty"`
	Description          string               `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	UserID               string               `protobuf:"bytes,5,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AuthorSocialLink     string               `protobuf:"bytes,6,opt,name=AuthorSocialLink,proto3" json:"AuthorSocialLink,omitempty"`
	ReadCount            int64                `protobuf:"varint,7,opt,name=ReadCount,proto3" json:"ReadCount,omitempty"`
	ServingAmount        int64                `protobuf:"varint,8,opt,name=ServingAmount,proto3" json:"ServingAmount,omitempty"`
	CookingTime          *timestamp.Timestamp `protobuf:"bytes,9,opt,name=CookingTime,proto3" json:"CookingTime,omitempty"`
	IsUsed               bool                 `protobuf:"varint,10,opt,name=IsUsed,proto3" json:"IsUsed,omitempty"`
	Status               Status               `protobuf:"varint,11,opt,name=Status,proto3,enum=recipe.Status" json:"Status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,12,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	CreatedBy            string               `protobuf:"bytes,13,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,14,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,15,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateRecipeRequest) Reset()         { *m = CreateRecipeRequest{} }
func (m *CreateRecipeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRecipeRequest) ProtoMessage()    {}
func (*CreateRecipeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c89a88051f20b159, []int{1}
}

func (m *CreateRecipeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRecipeRequest.Unmarshal(m, b)
}
func (m *CreateRecipeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRecipeRequest.Marshal(b, m, deterministic)
}
func (m *CreateRecipeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRecipeRequest.Merge(m, src)
}
func (m *CreateRecipeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRecipeRequest.Size(m)
}
func (m *CreateRecipeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRecipeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRecipeRequest proto.InternalMessageInfo

func (m *CreateRecipeRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateRecipeRequest) GetIngredrient() string {
	if m != nil {
		return m.Ingredrient
	}
	return ""
}

func (m *CreateRecipeRequest) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *CreateRecipeRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateRecipeRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *CreateRecipeRequest) GetAuthorSocialLink() string {
	if m != nil {
		return m.AuthorSocialLink
	}
	return ""
}

func (m *CreateRecipeRequest) GetReadCount() int64 {
	if m != nil {
		return m.ReadCount
	}
	return 0
}

func (m *CreateRecipeRequest) GetServingAmount() int64 {
	if m != nil {
		return m.ServingAmount
	}
	return 0
}

func (m *CreateRecipeRequest) GetCookingTime() *timestamp.Timestamp {
	if m != nil {
		return m.CookingTime
	}
	return nil
}

func (m *CreateRecipeRequest) GetIsUsed() bool {
	if m != nil {
		return m.IsUsed
	}
	return false
}

func (m *CreateRecipeRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *CreateRecipeRequest) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *CreateRecipeRequest) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *CreateRecipeRequest) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *CreateRecipeRequest) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

type CreateRecipeResponse struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRecipeResponse) Reset()         { *m = CreateRecipeResponse{} }
func (m *CreateRecipeResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRecipeResponse) ProtoMessage()    {}
func (*CreateRecipeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c89a88051f20b159, []int{2}
}

func (m *CreateRecipeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRecipeResponse.Unmarshal(m, b)
}
func (m *CreateRecipeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRecipeResponse.Marshal(b, m, deterministic)
}
func (m *CreateRecipeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRecipeResponse.Merge(m, src)
}
func (m *CreateRecipeResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRecipeResponse.Size(m)
}
func (m *CreateRecipeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRecipeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRecipeResponse proto.InternalMessageInfo

func (m *CreateRecipeResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type GetRecipeRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecipeRequest) Reset()         { *m = GetRecipeRequest{} }
func (m *GetRecipeRequest) String() string { return proto.CompactTextString(m) }
func (*GetRecipeRequest) ProtoMessage()    {}
func (*GetRecipeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c89a88051f20b159, []int{3}
}

func (m *GetRecipeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecipeRequest.Unmarshal(m, b)
}
func (m *GetRecipeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecipeRequest.Marshal(b, m, deterministic)
}
func (m *GetRecipeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecipeRequest.Merge(m, src)
}
func (m *GetRecipeRequest) XXX_Size() int {
	return xxx_messageInfo_GetRecipeRequest.Size(m)
}
func (m *GetRecipeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecipeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecipeRequest proto.InternalMessageInfo

func (m *GetRecipeRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type GetRecipeResponse struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Ingredrient          string               `protobuf:"bytes,3,opt,name=Ingredrient,proto3" json:"Ingredrient,omitempty"`
	Image                string               `protobuf:"bytes,4,opt,name=Image,proto3" json:"Image,omitempty"`
	Description          string               `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	UserID               string               `protobuf:"bytes,6,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AuthorSocialLink     string               `protobuf:"bytes,7,opt,name=AuthorSocialLink,proto3" json:"AuthorSocialLink,omitempty"`
	ReadCount            int64                `protobuf:"varint,8,opt,name=ReadCount,proto3" json:"ReadCount,omitempty"`
	ServingAmount        int64                `protobuf:"varint,9,opt,name=ServingAmount,proto3" json:"ServingAmount,omitempty"`
	CookingTime          *timestamp.Timestamp `protobuf:"bytes,10,opt,name=CookingTime,proto3" json:"CookingTime,omitempty"`
	IsUsed               bool                 `protobuf:"varint,11,opt,name=IsUsed,proto3" json:"IsUsed,omitempty"`
	Status               Status               `protobuf:"varint,12,opt,name=Status,proto3,enum=recipe.Status" json:"Status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,13,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	CreatedBy            string               `protobuf:"bytes,14,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,15,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,16,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetRecipeResponse) Reset()         { *m = GetRecipeResponse{} }
func (m *GetRecipeResponse) String() string { return proto.CompactTextString(m) }
func (*GetRecipeResponse) ProtoMessage()    {}
func (*GetRecipeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c89a88051f20b159, []int{4}
}

func (m *GetRecipeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecipeResponse.Unmarshal(m, b)
}
func (m *GetRecipeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecipeResponse.Marshal(b, m, deterministic)
}
func (m *GetRecipeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecipeResponse.Merge(m, src)
}
func (m *GetRecipeResponse) XXX_Size() int {
	return xxx_messageInfo_GetRecipeResponse.Size(m)
}
func (m *GetRecipeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecipeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecipeResponse proto.InternalMessageInfo

func (m *GetRecipeResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *GetRecipeResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GetRecipeResponse) GetIngredrient() string {
	if m != nil {
		return m.Ingredrient
	}
	return ""
}

func (m *GetRecipeResponse) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *GetRecipeResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GetRecipeResponse) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetRecipeResponse) GetAuthorSocialLink() string {
	if m != nil {
		return m.AuthorSocialLink
	}
	return ""
}

func (m *GetRecipeResponse) GetReadCount() int64 {
	if m != nil {
		return m.ReadCount
	}
	return 0
}

func (m *GetRecipeResponse) GetServingAmount() int64 {
	if m != nil {
		return m.ServingAmount
	}
	return 0
}

func (m *GetRecipeResponse) GetCookingTime() *timestamp.Timestamp {
	if m != nil {
		return m.CookingTime
	}
	return nil
}

func (m *GetRecipeResponse) GetIsUsed() bool {
	if m != nil {
		return m.IsUsed
	}
	return false
}

func (m *GetRecipeResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *GetRecipeResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetRecipeResponse) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *GetRecipeResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *GetRecipeResponse) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

type UpdateRecipeRequest struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Ingredrient          string               `protobuf:"bytes,3,opt,name=Ingredrient,proto3" json:"Ingredrient,omitempty"`
	Image                string               `protobuf:"bytes,4,opt,name=Image,proto3" json:"Image,omitempty"`
	Description          string               `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	UserID               string               `protobuf:"bytes,6,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AuthorSocialLink     string               `protobuf:"bytes,7,opt,name=AuthorSocialLink,proto3" json:"AuthorSocialLink,omitempty"`
	ReadCount            int64                `protobuf:"varint,8,opt,name=ReadCount,proto3" json:"ReadCount,omitempty"`
	ServingAmount        int64                `protobuf:"varint,9,opt,name=ServingAmount,proto3" json:"ServingAmount,omitempty"`
	CookingTime          *timestamp.Timestamp `protobuf:"bytes,10,opt,name=CookingTime,proto3" json:"CookingTime,omitempty"`
	IsUsed               bool                 `protobuf:"varint,11,opt,name=IsUsed,proto3" json:"IsUsed,omitempty"`
	Status               Status               `protobuf:"varint,12,opt,name=Status,proto3,enum=recipe.Status" json:"Status,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,13,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,14,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateRecipeRequest) Reset()         { *m = UpdateRecipeRequest{} }
func (m *UpdateRecipeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRecipeRequest) ProtoMessage()    {}
func (*UpdateRecipeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c89a88051f20b159, []int{5}
}

func (m *UpdateRecipeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRecipeRequest.Unmarshal(m, b)
}
func (m *UpdateRecipeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRecipeRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRecipeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRecipeRequest.Merge(m, src)
}
func (m *UpdateRecipeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRecipeRequest.Size(m)
}
func (m *UpdateRecipeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRecipeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRecipeRequest proto.InternalMessageInfo

func (m *UpdateRecipeRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *UpdateRecipeRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateRecipeRequest) GetIngredrient() string {
	if m != nil {
		return m.Ingredrient
	}
	return ""
}

func (m *UpdateRecipeRequest) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *UpdateRecipeRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateRecipeRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *UpdateRecipeRequest) GetAuthorSocialLink() string {
	if m != nil {
		return m.AuthorSocialLink
	}
	return ""
}

func (m *UpdateRecipeRequest) GetReadCount() int64 {
	if m != nil {
		return m.ReadCount
	}
	return 0
}

func (m *UpdateRecipeRequest) GetServingAmount() int64 {
	if m != nil {
		return m.ServingAmount
	}
	return 0
}

func (m *UpdateRecipeRequest) GetCookingTime() *timestamp.Timestamp {
	if m != nil {
		return m.CookingTime
	}
	return nil
}

func (m *UpdateRecipeRequest) GetIsUsed() bool {
	if m != nil {
		return m.IsUsed
	}
	return false
}

func (m *UpdateRecipeRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *UpdateRecipeRequest) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *UpdateRecipeRequest) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

type UpdateRecipeResponse struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Ingredrient          string               `protobuf:"bytes,3,opt,name=Ingredrient,proto3" json:"Ingredrient,omitempty"`
	Image                string               `protobuf:"bytes,4,opt,name=Image,proto3" json:"Image,omitempty"`
	Description          string               `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	UserID               string               `protobuf:"bytes,6,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AuthorSocialLink     string               `protobuf:"bytes,7,opt,name=AuthorSocialLink,proto3" json:"AuthorSocialLink,omitempty"`
	ReadCount            int64                `protobuf:"varint,8,opt,name=ReadCount,proto3" json:"ReadCount,omitempty"`
	ServingAmount        int64                `protobuf:"varint,9,opt,name=ServingAmount,proto3" json:"ServingAmount,omitempty"`
	CookingTime          *timestamp.Timestamp `protobuf:"bytes,10,opt,name=CookingTime,proto3" json:"CookingTime,omitempty"`
	IsUsed               bool                 `protobuf:"varint,11,opt,name=IsUsed,proto3" json:"IsUsed,omitempty"`
	Status               Status               `protobuf:"varint,12,opt,name=Status,proto3,enum=recipe.Status" json:"Status,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,13,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,14,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateRecipeResponse) Reset()         { *m = UpdateRecipeResponse{} }
func (m *UpdateRecipeResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateRecipeResponse) ProtoMessage()    {}
func (*UpdateRecipeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c89a88051f20b159, []int{6}
}

func (m *UpdateRecipeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRecipeResponse.Unmarshal(m, b)
}
func (m *UpdateRecipeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRecipeResponse.Marshal(b, m, deterministic)
}
func (m *UpdateRecipeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRecipeResponse.Merge(m, src)
}
func (m *UpdateRecipeResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateRecipeResponse.Size(m)
}
func (m *UpdateRecipeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRecipeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRecipeResponse proto.InternalMessageInfo

func (m *UpdateRecipeResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *UpdateRecipeResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateRecipeResponse) GetIngredrient() string {
	if m != nil {
		return m.Ingredrient
	}
	return ""
}

func (m *UpdateRecipeResponse) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *UpdateRecipeResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateRecipeResponse) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *UpdateRecipeResponse) GetAuthorSocialLink() string {
	if m != nil {
		return m.AuthorSocialLink
	}
	return ""
}

func (m *UpdateRecipeResponse) GetReadCount() int64 {
	if m != nil {
		return m.ReadCount
	}
	return 0
}

func (m *UpdateRecipeResponse) GetServingAmount() int64 {
	if m != nil {
		return m.ServingAmount
	}
	return 0
}

func (m *UpdateRecipeResponse) GetCookingTime() *timestamp.Timestamp {
	if m != nil {
		return m.CookingTime
	}
	return nil
}

func (m *UpdateRecipeResponse) GetIsUsed() bool {
	if m != nil {
		return m.IsUsed
	}
	return false
}

func (m *UpdateRecipeResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *UpdateRecipeResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *UpdateRecipeResponse) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

type ListRecipeRequest struct {
	SortBy               SortBy   `protobuf:"varint,1,opt,name=SortBy,proto3,enum=recipe.SortBy" json:"SortBy,omitempty"`
	SortByColumn         string   `protobuf:"bytes,2,opt,name=SortByColumn,proto3" json:"SortByColumn,omitempty"`
	Status               Status   `protobuf:"varint,3,opt,name=Status,proto3,enum=recipe.Status" json:"Status,omitempty"`
	Limit                int32    `protobuf:"varint,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset               int32    `protobuf:"varint,5,opt,name=Offset,proto3" json:"Offset,omitempty"`
	SearchTerm           string   `protobuf:"bytes,6,opt,name=SearchTerm,proto3" json:"SearchTerm,omitempty"`
	StartDate            string   `protobuf:"bytes,7,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate              string   `protobuf:"bytes,8,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRecipeRequest) Reset()         { *m = ListRecipeRequest{} }
func (m *ListRecipeRequest) String() string { return proto.CompactTextString(m) }
func (*ListRecipeRequest) ProtoMessage()    {}
func (*ListRecipeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c89a88051f20b159, []int{7}
}

func (m *ListRecipeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRecipeRequest.Unmarshal(m, b)
}
func (m *ListRecipeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRecipeRequest.Marshal(b, m, deterministic)
}
func (m *ListRecipeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRecipeRequest.Merge(m, src)
}
func (m *ListRecipeRequest) XXX_Size() int {
	return xxx_messageInfo_ListRecipeRequest.Size(m)
}
func (m *ListRecipeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRecipeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRecipeRequest proto.InternalMessageInfo

func (m *ListRecipeRequest) GetSortBy() SortBy {
	if m != nil {
		return m.SortBy
	}
	return SortBy_DESC
}

func (m *ListRecipeRequest) GetSortByColumn() string {
	if m != nil {
		return m.SortByColumn
	}
	return ""
}

func (m *ListRecipeRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Unknown
}

func (m *ListRecipeRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRecipeRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListRecipeRequest) GetSearchTerm() string {
	if m != nil {
		return m.SearchTerm
	}
	return ""
}

func (m *ListRecipeRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *ListRecipeRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

type ListRecipeResponse struct {
	Recipes              []*Recipe `protobuf:"bytes,1,rep,name=Recipes,proto3" json:"Recipes,omitempty"`
	Total                int32     `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListRecipeResponse) Reset()         { *m = ListRecipeResponse{} }
func (m *ListRecipeResponse) String() string { return proto.CompactTextString(m) }
func (*ListRecipeResponse) ProtoMessage()    {}
func (*ListRecipeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c89a88051f20b159, []int{8}
}

func (m *ListRecipeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRecipeResponse.Unmarshal(m, b)
}
func (m *ListRecipeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRecipeResponse.Marshal(b, m, deterministic)
}
func (m *ListRecipeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRecipeResponse.Merge(m, src)
}
func (m *ListRecipeResponse) XXX_Size() int {
	return xxx_messageInfo_ListRecipeResponse.Size(m)
}
func (m *ListRecipeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRecipeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRecipeResponse proto.InternalMessageInfo

func (m *ListRecipeResponse) GetRecipes() []*Recipe {
	if m != nil {
		return m.Recipes
	}
	return nil
}

func (m *ListRecipeResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type DeleteRecipeRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	DeletedBy            string   `protobuf:"bytes,2,opt,name=DeletedBy,proto3" json:"DeletedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRecipeRequest) Reset()         { *m = DeleteRecipeRequest{} }
func (m *DeleteRecipeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRecipeRequest) ProtoMessage()    {}
func (*DeleteRecipeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c89a88051f20b159, []int{9}
}

func (m *DeleteRecipeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRecipeRequest.Unmarshal(m, b)
}
func (m *DeleteRecipeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRecipeRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRecipeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRecipeRequest.Merge(m, src)
}
func (m *DeleteRecipeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRecipeRequest.Size(m)
}
func (m *DeleteRecipeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRecipeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRecipeRequest proto.InternalMessageInfo

func (m *DeleteRecipeRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *DeleteRecipeRequest) GetDeletedBy() string {
	if m != nil {
		return m.DeletedBy
	}
	return ""
}

func init() {
	proto.RegisterEnum("recipe.Status", Status_name, Status_value)
	proto.RegisterEnum("recipe.SortBy", SortBy_name, SortBy_value)
	proto.RegisterType((*Recipe)(nil), "recipe.Recipe")
	proto.RegisterType((*CreateRecipeRequest)(nil), "recipe.CreateRecipeRequest")
	proto.RegisterType((*CreateRecipeResponse)(nil), "recipe.CreateRecipeResponse")
	proto.RegisterType((*GetRecipeRequest)(nil), "recipe.GetRecipeRequest")
	proto.RegisterType((*GetRecipeResponse)(nil), "recipe.GetRecipeResponse")
	proto.RegisterType((*UpdateRecipeRequest)(nil), "recipe.UpdateRecipeRequest")
	proto.RegisterType((*UpdateRecipeResponse)(nil), "recipe.UpdateRecipeResponse")
	proto.RegisterType((*ListRecipeRequest)(nil), "recipe.ListRecipeRequest")
	proto.RegisterType((*ListRecipeResponse)(nil), "recipe.ListRecipeResponse")
	proto.RegisterType((*DeleteRecipeRequest)(nil), "recipe.DeleteRecipeRequest")
}

func init() {
	proto.RegisterFile("proto/v1/server/recipe/recipe.proto", fileDescriptor_c89a88051f20b159)
}

var fileDescriptor_c89a88051f20b159 = []byte{
	// 871 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x97, 0xcf, 0x6e, 0xfa, 0x46,
	0x10, 0xc7, 0xb1, 0x8d, 0x0d, 0x0c, 0x7f, 0x7e, 0x64, 0x83, 0xa2, 0xad, 0x13, 0xb5, 0xc8, 0xad,
	0x22, 0x94, 0x03, 0xa8, 0xe9, 0xa5, 0x87, 0x5e, 0xf8, 0xa7, 0x0a, 0x25, 0x52, 0x25, 0x03, 0x97,
	0xde, 0x1c, 0xd8, 0x10, 0x2b, 0xd8, 0xa6, 0xf6, 0x42, 0xc5, 0x43, 0xf4, 0xda, 0x97, 0xe9, 0x13,
	0xf4, 0x79, 0xda, 0x5b, 0x2f, 0x95, 0x77, 0xd7, 0xd8, 0x80, 0x6b, 0x22, 0x2e, 0x3d, 0xfc, 0x38,
	0x25, 0xf3, 0x9d, 0xd9, 0x61, 0x77, 0xe6, 0xe3, 0xf1, 0x1a, 0xbe, 0x5e, 0xf9, 0x1e, 0xf5, 0x3a,
	0x9b, 0x6f, 0x3b, 0x01, 0xf1, 0x37, 0xc4, 0xef, 0xf8, 0x64, 0x66, 0xaf, 0x88, 0xf8, 0xd3, 0x66,
	0x5e, 0xa4, 0x71, 0x4b, 0xff, 0x6a, 0xe1, 0x79, 0x8b, 0x25, 0xe9, 0x30, 0xf5, 0x65, 0xfd, 0xda,
	0xa1, 0xb6, 0x43, 0x02, 0x6a, 0x39, 0x2b, 0x1e, 0xa8, 0xdf, 0x1e, 0x06, 0x10, 0x67, 0x45, 0xb7,
	0xdc, 0x69, 0xfc, 0xae, 0x82, 0x66, 0xb2, 0x44, 0xa8, 0x06, 0xf2, 0x68, 0x80, 0xa5, 0xa6, 0xd4,
	0x2a, 0x99, 0xf2, 0x68, 0x80, 0x1a, 0xa0, 0x4e, 0x6c, 0xba, 0x24, 0x58, 0x66, 0x12, 0x37, 0x50,
	0x13, 0xca, 0x23, 0x77, 0xe1, 0x93, 0xb9, 0x6f, 0x13, 0x97, 0x62, 0x85, 0xf9, 0x92, 0x52, 0xb8,
	0x6e, 0xe4, 0x58, 0x0b, 0x82, 0xf3, 0x7c, 0x1d, 0x33, 0xc2, 0x75, 0x03, 0x12, 0xcc, 0x7c, 0x7b,
	0x45, 0x6d, 0xcf, 0xc5, 0x2a, 0x5f, 0x97, 0x90, 0xd0, 0x0d, 0x68, 0xd3, 0x80, 0xf8, 0xa3, 0x01,
	0xd6, 0x98, 0x53, 0x58, 0xe8, 0x01, 0xea, 0xdd, 0x35, 0x7d, 0xf3, 0xfc, 0xb1, 0x37, 0xb3, 0xad,
	0xe5, 0xb3, 0xed, 0xbe, 0xe3, 0x02, 0x8b, 0x38, 0xd2, 0xd1, 0x1d, 0x94, 0x4c, 0x62, 0xcd, 0xfb,
	0xde, 0xda, 0xa5, 0xb8, 0xd8, 0x94, 0x5a, 0x8a, 0x19, 0x0b, 0xe8, 0x1b, 0xa8, 0x8e, 0x89, 0xbf,
	0xb1, 0xdd, 0x45, 0xd7, 0x61, 0x11, 0x25, 0x16, 0xb1, 0x2f, 0xa2, 0x1f, 0xa0, 0xdc, 0xf7, 0xbc,
	0x77, 0xdb, 0x5d, 0x4c, 0x6c, 0x87, 0x60, 0x68, 0x4a, 0xad, 0xf2, 0xa3, 0xde, 0xe6, 0x55, 0x6c,
	0x47, 0x55, 0x6c, 0x4f, 0xa2, 0x32, 0x9b, 0xc9, 0xf0, 0xf0, 0x14, 0xa3, 0x60, 0x1a, 0x90, 0x39,
	0x2e, 0x37, 0xa5, 0x56, 0xd1, 0x14, 0x16, 0xba, 0x07, 0x6d, 0x4c, 0x2d, 0xba, 0x0e, 0x70, 0xa5,
	0x29, 0xb5, 0x6a, 0x8f, 0xb5, 0xb6, 0xe8, 0x26, 0x57, 0x4d, 0xe1, 0x45, 0xdf, 0x43, 0xa9, 0xef,
	0x13, 0x8b, 0x92, 0x79, 0x97, 0xe2, 0xea, 0xc9, 0xdf, 0x8e, 0x83, 0xc3, 0xb3, 0x0b, 0xa3, 0xb7,
	0xc5, 0x35, 0x56, 0xa0, 0x58, 0x08, 0xf3, 0x4e, 0x57, 0x73, 0x91, 0xf7, 0xd3, 0xe9, 0xbc, 0xbb,
	0xe0, 0x30, 0xaf, 0x30, 0x7a, 0x5b, 0x5c, 0xe7, 0x79, 0x77, 0x42, 0x98, 0x77, 0x40, 0x96, 0x84,
	0xe7, 0xbd, 0x3a, 0x9d, 0x77, 0x17, 0x1c, 0xe6, 0x15, 0x46, 0x6f, 0x8b, 0x11, 0xcf, 0xbb, 0x13,
	0x8c, 0x3f, 0xf2, 0x70, 0xcd, 0x77, 0xcf, 0xf1, 0x34, 0xc9, 0x2f, 0x6b, 0x12, 0xd0, 0x98, 0x4a,
	0x29, 0x83, 0x4a, 0x39, 0x83, 0x4a, 0x25, 0x83, 0xca, 0x7c, 0x16, 0x95, 0xea, 0x49, 0x2a, 0xb5,
	0x8f, 0x50, 0x59, 0x38, 0x49, 0x65, 0xf1, 0x03, 0x54, 0x96, 0xce, 0xa5, 0x12, 0xfe, 0x83, 0xca,
	0xf2, 0xc7, 0xa9, 0xac, 0x9c, 0x4d, 0x65, 0x35, 0x93, 0xca, 0xda, 0xd9, 0x54, 0x7e, 0x3a, 0xa0,
	0xd2, 0xb8, 0x87, 0xc6, 0x3e, 0x3c, 0xc1, 0xca, 0x73, 0x83, 0xa3, 0x19, 0x67, 0x18, 0x50, 0xff,
	0x91, 0xd0, 0x7d, 0xc2, 0x0e, 0x63, 0xfe, 0xcc, 0xc3, 0x55, 0x22, 0x28, 0x3d, 0xd3, 0x65, 0x5a,
	0x5e, 0xa6, 0xe5, 0xe9, 0x69, 0x69, 0xfc, 0xa5, 0xc0, 0x35, 0xb7, 0x32, 0x99, 0xbb, 0xd0, 0xf4,
	0x7f, 0xd1, 0x14, 0x77, 0xbd, 0x7a, 0x76, 0xd7, 0x6b, 0x87, 0x5d, 0xff, 0x5b, 0x81, 0xc6, 0x7e,
	0xd7, 0x2f, 0x43, 0xe4, 0x33, 0x68, 0xfb, 0x6f, 0x32, 0x5c, 0x3d, 0xdb, 0xc1, 0xc1, 0xeb, 0x25,
	0xdc, 0x95, 0xe7, 0xd3, 0xde, 0x96, 0xf5, 0x3d, 0xb9, 0x2b, 0xa6, 0x9a, 0xc2, 0x8b, 0x0c, 0xa8,
	0xf0, 0xff, 0xfa, 0xde, 0x72, 0xed, 0xb8, 0x02, 0x89, 0x3d, 0x2d, 0x71, 0x42, 0x25, 0xf3, 0x84,
	0x0d, 0x50, 0x9f, 0x6d, 0xc7, 0xa6, 0x8c, 0x0f, 0xd5, 0xe4, 0x46, 0x58, 0xb7, 0x9f, 0x5e, 0x5f,
	0x03, 0x42, 0x19, 0x1a, 0xaa, 0x29, 0x2c, 0xf4, 0x25, 0xc0, 0x98, 0x58, 0xfe, 0xec, 0x6d, 0x42,
	0x7c, 0x47, 0x90, 0x91, 0x50, 0xc2, 0x53, 0x8f, 0xa9, 0xe5, 0xd3, 0x81, 0x45, 0x89, 0xc0, 0x22,
	0x16, 0x10, 0x86, 0xc2, 0xd0, 0x9d, 0x33, 0x5f, 0x91, 0xf9, 0x22, 0xd3, 0x98, 0x00, 0x4a, 0x96,
	0x43, 0x3c, 0x03, 0x2d, 0x28, 0x70, 0x25, 0xc0, 0x52, 0x53, 0x69, 0x95, 0xe3, 0x43, 0x88, 0xc0,
	0xc8, 0xcd, 0x9e, 0x0e, 0x8f, 0x5a, 0x4b, 0x56, 0x0a, 0xd5, 0xe4, 0x86, 0xd1, 0x87, 0x6b, 0x7e,
	0x6b, 0xcc, 0x9e, 0xa8, 0x7b, 0xb7, 0x4d, 0xf9, 0xe0, 0xb6, 0xf9, 0xd0, 0x89, 0x0a, 0x89, 0xca,
	0x50, 0x98, 0xba, 0xef, 0xae, 0xf7, 0xab, 0x5b, 0xcf, 0x21, 0x00, 0xad, 0x3b, 0xa3, 0xf6, 0x86,
	0xd4, 0x25, 0x54, 0x81, 0xe2, 0xc8, 0xb5, 0xb8, 0x25, 0x3f, 0xdc, 0x46, 0x5d, 0x44, 0x45, 0xc8,
	0x0f, 0x86, 0xe3, 0x7e, 0x3d, 0x87, 0x0a, 0xa0, 0x74, 0xc7, 0xfd, 0xba, 0xf4, 0xf8, 0x8f, 0x0c,
	0x55, 0xbe, 0x1b, 0x86, 0xf9, 0x8c, 0xa0, 0x27, 0xa8, 0x24, 0xef, 0x23, 0xe8, 0x36, 0x3a, 0x63,
	0xca, 0x15, 0x57, 0xbf, 0x4b, 0x77, 0xf2, 0x7a, 0x19, 0x39, 0xd4, 0x83, 0xd2, 0xee, 0x3e, 0x82,
	0x70, 0x14, 0x7c, 0x78, 0x8f, 0xd1, 0xbf, 0x48, 0xf1, 0xec, 0x72, 0x3c, 0x41, 0x25, 0x39, 0x91,
	0xe2, 0x0d, 0xa5, 0xbc, 0x9d, 0xe2, 0x0d, 0xa5, 0x0d, 0x31, 0x23, 0x87, 0x86, 0x00, 0x71, 0x63,
	0xd1, 0xee, 0x77, 0x8f, 0xd8, 0xd7, 0xf5, 0x34, 0x57, 0x22, 0x4d, 0x25, 0xd9, 0xc9, 0x78, 0x4f,
	0x29, 0xfd, 0xd5, 0x6f, 0x8e, 0x9e, 0xd0, 0x61, 0xf8, 0x59, 0x6b, 0xe4, 0x7a, 0xfa, 0xcf, 0xb8,
	0xdd, 0x49, 0xff, 0x82, 0x7e, 0xd1, 0x98, 0xfe, 0xdd, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x67,
	0x2b, 0x5b, 0x0d, 0x62, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RecipeServiceClient is the client API for RecipeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecipeServiceClient interface {
	CreateRecipe(ctx context.Context, in *CreateRecipeRequest, opts ...grpc.CallOption) (*CreateRecipeResponse, error)
	GetRecipe(ctx context.Context, in *GetRecipeRequest, opts ...grpc.CallOption) (*GetRecipeResponse, error)
	UpdateRecipe(ctx context.Context, in *UpdateRecipeRequest, opts ...grpc.CallOption) (*UpdateRecipeResponse, error)
	ListRecipe(ctx context.Context, in *ListRecipeRequest, opts ...grpc.CallOption) (*ListRecipeResponse, error)
	DeleteRecipe(ctx context.Context, in *DeleteRecipeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type recipeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRecipeServiceClient(cc grpc.ClientConnInterface) RecipeServiceClient {
	return &recipeServiceClient{cc}
}

func (c *recipeServiceClient) CreateRecipe(ctx context.Context, in *CreateRecipeRequest, opts ...grpc.CallOption) (*CreateRecipeResponse, error) {
	out := new(CreateRecipeResponse)
	err := c.cc.Invoke(ctx, "/recipe.RecipeService/CreateRecipe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipeServiceClient) GetRecipe(ctx context.Context, in *GetRecipeRequest, opts ...grpc.CallOption) (*GetRecipeResponse, error) {
	out := new(GetRecipeResponse)
	err := c.cc.Invoke(ctx, "/recipe.RecipeService/GetRecipe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipeServiceClient) UpdateRecipe(ctx context.Context, in *UpdateRecipeRequest, opts ...grpc.CallOption) (*UpdateRecipeResponse, error) {
	out := new(UpdateRecipeResponse)
	err := c.cc.Invoke(ctx, "/recipe.RecipeService/UpdateRecipe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipeServiceClient) ListRecipe(ctx context.Context, in *ListRecipeRequest, opts ...grpc.CallOption) (*ListRecipeResponse, error) {
	out := new(ListRecipeResponse)
	err := c.cc.Invoke(ctx, "/recipe.RecipeService/ListRecipe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipeServiceClient) DeleteRecipe(ctx context.Context, in *DeleteRecipeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/recipe.RecipeService/DeleteRecipe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecipeServiceServer is the server API for RecipeService service.
type RecipeServiceServer interface {
	CreateRecipe(context.Context, *CreateRecipeRequest) (*CreateRecipeResponse, error)
	GetRecipe(context.Context, *GetRecipeRequest) (*GetRecipeResponse, error)
	UpdateRecipe(context.Context, *UpdateRecipeRequest) (*UpdateRecipeResponse, error)
	ListRecipe(context.Context, *ListRecipeRequest) (*ListRecipeResponse, error)
	DeleteRecipe(context.Context, *DeleteRecipeRequest) (*empty.Empty, error)
}

// UnimplementedRecipeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRecipeServiceServer struct {
}

func (*UnimplementedRecipeServiceServer) CreateRecipe(ctx context.Context, req *CreateRecipeRequest) (*CreateRecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecipe not implemented")
}
func (*UnimplementedRecipeServiceServer) GetRecipe(ctx context.Context, req *GetRecipeRequest) (*GetRecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipe not implemented")
}
func (*UnimplementedRecipeServiceServer) UpdateRecipe(ctx context.Context, req *UpdateRecipeRequest) (*UpdateRecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRecipe not implemented")
}
func (*UnimplementedRecipeServiceServer) ListRecipe(ctx context.Context, req *ListRecipeRequest) (*ListRecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRecipe not implemented")
}
func (*UnimplementedRecipeServiceServer) DeleteRecipe(ctx context.Context, req *DeleteRecipeRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRecipe not implemented")
}

func RegisterRecipeServiceServer(s *grpc.Server, srv RecipeServiceServer) {
	s.RegisterService(&_RecipeService_serviceDesc, srv)
}

func _RecipeService_CreateRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipeServiceServer).CreateRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipe.RecipeService/CreateRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipeServiceServer).CreateRecipe(ctx, req.(*CreateRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecipeService_GetRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipeServiceServer).GetRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipe.RecipeService/GetRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipeServiceServer).GetRecipe(ctx, req.(*GetRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecipeService_UpdateRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipeServiceServer).UpdateRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipe.RecipeService/UpdateRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipeServiceServer).UpdateRecipe(ctx, req.(*UpdateRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecipeService_ListRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipeServiceServer).ListRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipe.RecipeService/ListRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipeServiceServer).ListRecipe(ctx, req.(*ListRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecipeService_DeleteRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipeServiceServer).DeleteRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipe.RecipeService/DeleteRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipeServiceServer).DeleteRecipe(ctx, req.(*DeleteRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RecipeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "recipe.RecipeService",
	HandlerType: (*RecipeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRecipe",
			Handler:    _RecipeService_CreateRecipe_Handler,
		},
		{
			MethodName: "GetRecipe",
			Handler:    _RecipeService_GetRecipe_Handler,
		},
		{
			MethodName: "UpdateRecipe",
			Handler:    _RecipeService_UpdateRecipe_Handler,
		},
		{
			MethodName: "ListRecipe",
			Handler:    _RecipeService_ListRecipe_Handler,
		},
		{
			MethodName: "DeleteRecipe",
			Handler:    _RecipeService_DeleteRecipe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/v1/server/recipe/recipe.proto",
}
